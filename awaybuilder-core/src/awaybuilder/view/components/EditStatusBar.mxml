<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="zoom",type="awaybuilder.view.components.events.ToolBarZoomEvent")]
	</fx:Metadata>
	
	<mx:Spacer width="100%"/>
	
	<s:Button id="zoomOutButton" styleName="toolbarButton" toolTip="Zoom Out"
		click="zoomOutButton_clickHandler(event)"/>
	<s:HSlider id="zoomSlider" minimum="0" maximum="2" stepSize="0.0005" value="1"
		liveDragging="true"
		dataTipFormatFunction="{zoomSlider_dataTipFormat}"
		change="zoomSlider_changeHandler(event)"/>
	<s:Button id="zoomInButton" styleName="toolbarButton" toolTip="Zoom In"
		click="zoomInButton_clickHandler(event)"/>
	
	<fx:Script>
	<![CDATA[
		import awaybuilder.utils.sliderValueToZoomValue;
		import awaybuilder.utils.zoomValueToSliderValue;
		import awaybuilder.view.components.events.ToolBarZoomEvent;

		public function get zoom():Number
		{
			if(!this.zoomSlider)
			{
				return 1;
			}
			return sliderValueToZoomValue(this.zoomSlider.value);
		}

		public function set zoom(value:Number):void
		{
			if(this.zoom == value)
			{
				return;
			}
			this.zoomSlider.value = zoomValueToSliderValue(value);
		}

		protected function editor_mouseWheelHandler(event:MouseEvent):void
		{
			this.zoomSlider.value += event.delta * 0.05;
		}
		
		private function zoomSlider_dataTipFormat(value:Number):String
		{
			if(value >= 1)
			{
				value = 1 + 4 * (value - 1);
			}
			else
			{
				value = 0.25 + 0.75 * value;
			}
			return int(value * 100) + "%";
		}
		
		protected function zoomInButton_clickHandler(event:MouseEvent):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_IN));
		}
		
		protected function zoomOutButton_clickHandler(event:MouseEvent):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_OUT));
		}
		
		protected function zoomSlider_changeHandler(event:Event):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_TO, this.zoom));
		}

	]]>
	</fx:Script>
</s:SkinnableContainer>