<?xml version="1.0" encoding="utf-8"?>
<editors:EditorBase xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="awaybuilder.view.components.*" xmlns:controls="awaybuilder.view.components.controls.*"
		  xmlns:editors="awaybuilder.view.components.editors.*" xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script><![CDATA[
		import away3d.entities.Mesh;
		
		import awaybuilder.model.vo.scene.AssetVO;
		import awaybuilder.model.vo.scene.ContainerVO;
		import awaybuilder.model.vo.scene.MeshVO;
		import awaybuilder.model.vo.scene.SubMeshVO;
		import awaybuilder.view.components.editors.events.PropertyEditorEvent;
		
		[Bindable]
		private var _asset:ContainerVO;
		
		override protected function validate(asset:AssetVO):void
		{
			if( !(asset is ContainerVO) ) return;
			_asset = ContainerVO(asset).clone() as ContainerVO;
		}
		
		private function position_commitHandler(event:Event):void {
			var newValue:Vector3D = new Vector3D(xStepper.value, yStepper.value, zStepper.value);
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.TRANSLATE, newValue, true));
		}
		
		private function rotation_commitHandler(event:Event):void {
			var newValue:Vector3D = new Vector3D(rotationXStepper.value, rotationYStepper.value, rotationZStepper.value);
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.ROTATE, newValue, true));
		}
		
		private function scale_commitHandler(event:Event):void {
			var newValue:Vector3D = new Vector3D(scaleXStepper.value, scaleYStepper.value, scaleZStepper.value);
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SCALE, newValue, true));
		}
		
		private function name_changeHandler(event:Event):void {
			_asset.name = nameInput.text;
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.CONTAINER_CHANGE, _asset, true));
		}
		protected function editParentObjectButton_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHOW_PARENT_MESH_PROPERTIES,  prevSelected.removeItemAt(prevSelected.length-1), true));
		}
		
		private function stepperFormatFunc(val:Number):String 
		{ 
			return val.toString().replace(".",","); 
		} 
		
		private function stepperParseFunc(val:String):Number 
		{ 
			var stringVal:String = val.replace(",","."); 
			return Number(stringVal);     
		} 
		
	]]></fx:Script>
	
	
	<s:Group width="100%" top="0">
		<s:Rect left="0" right="0" top="3" bottom="3">
			<s:fill>
				<s:SolidColor color="0x111111" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" verticalAlign="middle" paddingLeft="2" paddingRight="2" paddingTop="4" paddingBottom="4">
			<s:Button id="editParentObjectButton" styleName="editParentObjectButtonStyle" visible="{prevSelected.length>0}"
					  width="32" height="32" click="editParentObjectButton_clickHandler(event)"/>
			<s:Label width="100%" text="ObjectContainer3D" fontWeight="bold" fontSize="14"/>
		</s:HGroup>
	</s:Group>
	
	<s:Form width="100%" skinClass="awaybuilder.view.skins.PropertyFormSkin">
		<s:FormItem label="Name" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
			<s:TextInput id="nameInput" width="100%" text="{_asset.name}" change="name_changeHandler(event)"/>
		</s:FormItem>
	</s:Form>
	<s:Spacer height="6"/>
	<controls:CollapsiblePanel width="100%" title="Transformations" collapsed="true">
		<s:Form width="100%" skinClass="awaybuilder.view.skins.PropertyFormSkin">
			<s:FormItem label="Position" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
				<s:NumericStepper id="xStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.x}"
								  change="position_commitHandler(event)" />
				<s:NumericStepper id="yStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.y}" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  change="position_commitHandler(event)"/>
				<s:NumericStepper id="zStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.z}" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  change="position_commitHandler(event)"/>
			</s:FormItem>
			<s:FormItem label="Pivot Point" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
				<s:NumericStepper id="pivotXStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.pivotX}"
								  change="position_commitHandler(event)" />
				<s:NumericStepper id="pivotYStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.pivotY}" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  change="position_commitHandler(event)"/>
				<s:NumericStepper id="pivotZStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" 
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.pivotZ}" stepSize="0.01" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc"
								  change="position_commitHandler(event)"/>
			</s:FormItem>
			<s:FormItem label="Rotation" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
				<s:NumericStepper id="rotationXStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-360" maximum="360" width="100%" value="{_asset.rotationX}" 
								  change="rotation_commitHandler(event)"/>
				<s:NumericStepper id="rotationYStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-360" maximum="360" width="100%" value="{_asset.rotationY}"
								  change="rotation_commitHandler(event)"/>
				<s:NumericStepper id="rotationZStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-360" maximum="360" width="100%" value="{_asset.rotationZ}"
								  change="rotation_commitHandler(event)"/>
			</s:FormItem>
			<controls:HorizontalFormSeparator/>
			<s:FormItem label="Scale" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
				<s:NumericStepper id="scaleXStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.scaleX}"
								  change="scale_commitHandler(event)" />
				<s:NumericStepper id="scaleYStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.scaleY}"
								  change="scale_commitHandler(event)"/>
				<s:NumericStepper id="scaleZStepper" skinClass="awaybuilder.view.skins.TinyStepperSkin" valueFormatFunction="stepperFormatFunc" valueParseFunction="stepperParseFunc" stepSize="0.01"
								  minimum="-999999" maximum="999999" width="100%" value="{_asset.scaleZ}"
								  change="scale_commitHandler(event)"/>
			</s:FormItem>
		</s:Form>
	</controls:CollapsiblePanel>
	<controls:CollapsiblePanel width="100%" title="Extras" collapsed="true">
	</controls:CollapsiblePanel>
</editors:EditorBase>
