<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" title="Add Effect Metod" width="380"
			   close="titlewindow_closeHandler(event)" xmlns:controls="awaybuilder.view.components.controls.*"
			   currentState="ColorMatrix"
			   >
	<s:layout>
		<s:VerticalLayout paddingLeft="16" paddingRight="16" paddingTop="16" paddingBottom="16"/>
	</s:layout>
	<s:states>
		<s:State name="AlphaMask"/>
		<s:State name="ColorMatrix"/>
		<s:State name="ColorTransform"/>
		<s:State name="EnvMap"/>
		<s:State name="Fog"/>
		<s:State name="FresnelEnvMap"/>
		<s:State name="FresnelPlanarReflection"/>
		<s:State name="LightMap"/>
		<s:State name="Outline"/>
		<s:State name="PlanarReflection"/>
		<s:State name="ProjectiveTexture"/>
		<s:State name="RefractionEnvMap"/>
		<s:State name="RimLight"/>
	</s:states>
	<fx:Declarations>
		<s:ArrayList id="typeList">
			<!--<fx:Object label="Alpha Mask" value="AlphaMask"/>-->
			<fx:Object label="Color Matrix" value="ColorMatrix"/>
			<fx:Object label="Color Transform" value="ColorTransform"/>
			<!--<fx:Object label="Environment Map" value="EnvMap"/>-->
			<fx:Object label="Fog" value="Fog"/>
			<!--<fx:Object label="Fresnel Environment Map" value="FresnelEnvMap"/>
			<fx:Object label="Fresnel Planar Reflection" value="FresnelPlanarReflection"/>
			<fx:Object label="Light Map" value="LightMap"/>
			<fx:Object label="Outline" value="Outline"/>
			<fx:Object label="Planar Reflection" value="PlanarReflection"/>
			<fx:Object label="Projective Texture" value="ProjectiveTexture"/>
			<fx:Object label="Refraction Environment Map" value="RefractionEnvMap"/>
			<fx:Object label="Rim Light" value="RimLight"/>-->
		</s:ArrayList>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import away3d.materials.methods.AlphaMaskMethod;
			import away3d.materials.methods.ColorMatrixMethod;
			import away3d.materials.methods.ColorTransformMethod;
			import away3d.materials.methods.EffectMethodBase;
			import away3d.materials.methods.FogMethod;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			public var selectedEffect:EffectMethodBase;
			
			public static function show( closeHandler:Function ):AddEffectMethodPopup
			{
				var popup:AddEffectMethodPopup = PopUpManager.createPopUp( FlexGlobals.topLevelApplication as DisplayObject,AddEffectMethodPopup,true) as AddEffectMethodPopup;
				popup.addEventListener( CloseEvent.CLOSE, closeHandler );
				PopUpManager.centerPopUp( popup );
				return popup;
			}
			
			protected function titlewindow_closeHandler(event:CloseEvent):void
			{
				PopUpManager.removePopUp( this );
			}
			
			protected function yesButton_clickHandler(event:MouseEvent):void
			{
				switch(currentState)
				{
					case "AlphaMask":
//						selectedEffect = new AlphaMaskMethod(
						break;
					case "ColorMatrix":
						selectedEffect = new ColorMatrixMethod([r1c1Stepper.value, r1c2Stepper.value, r1c3Stepper.value, r1c4Stepper.value, r1c5Stepper.value, 
							r2c1Stepper.value, r2c2Stepper.value, r2c3Stepper.value, r2c4Stepper.value, r2c5Stepper.value, 
							r3c1Stepper.value, r3c2Stepper.value, r3c3Stepper.value, r3c4Stepper.value, r3c5Stepper.value, 
							r4c1Stepper.value, r4c2Stepper.value, r4c3Stepper.value, r4c4Stepper.value, r4c5Stepper.value]);
						break;
					case "ColorTransform":
						selectedEffect = new ColorTransformMethod();
						ColorTransformMethod( selectedEffect ).colorTransform = new ColorTransform( redMultiplyerStepper.value, greenMultiplyerStepper.value, blueMultiplyerStepper.value, alphaMultiplyerStepper.value, redOffsetStepper.value, greenOffsetStepper.value, blueMultiplyerStepper.value, alphaMultiplyerStepper.value );
						break;
					case "EnvMap":
						
						break;
					case "Fog":
						selectedEffect = new FogMethod( minDistanceStepper.value, maxDistanceStepper.value, colorPicker.value as uint);						
						break;
					case "FresnelEnvMap":
						
						break;
					case "FresnelPlanarReflection":
						
						break;
					case "LightMap":
						
						break;
					case "Outline":
						
						break;
					case "PlanarReflection":
						
						break;
					case "ProjectiveTexture":
						
						break;
					case "RefractionEnvMap":
						
						break;
					case "RimLight":
						
						break;
				}
				
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE, false, false, Alert.YES ) );
				PopUpManager.removePopUp( this );
			}
			
			protected function noButton_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE, false, false, Alert.NO ) );
				PopUpManager.removePopUp( this );
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE ) );
				PopUpManager.removePopUp( this );
			}
			
			protected function methodList_changeHandler(event:IndexChangeEvent):void
			{
				currentState = methodList.selectedItem.value;
			}
			
			private function myFormatFunc(val:Number):String 
			{ 
				return val.toString().replace(".",","); 
			} 
			
			private function myParseFunc(val:String):Number 
			{ 
				var stringVal:String = val.replace(",","."); 
				return Number(stringVal);     
			} 
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Form skinClass="awaybuilder.view.skins.PropertyFormSkin" width="100%" minHeight="300">
		<s:FormItem label="Effect Method Type" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
			<s:DropDownList id="methodList" requireSelection="true" width="100%" dataProvider="{typeList}"
							change="methodList_changeHandler(event)"/>
		</s:FormItem>
		<controls:HorizontalFormSeparator/>
		
		<s:FormItem label="Raw 1" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorMatrix" width="100%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<s:NumericStepper id="r1c1Stepper" minimum="0" maximum="1" value="0.2225" stepSize="0.0001" valueFormatFunction="myFormatFunc"/>
			<s:NumericStepper id="r1c2Stepper" minimum="0" maximum="1" value="0.7169" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r1c3Stepper" minimum="0" maximum="1" value="0.0606" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r1c4Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r1c5Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Raw 2" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorMatrix" width="100%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<s:NumericStepper id="r2c1Stepper" minimum="0" maximum="1" value="0.2225" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r2c2Stepper" minimum="0" maximum="1" value="0.7169" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r2c3Stepper" minimum="0" maximum="1" value="0.0606" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r2c4Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r2c5Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Raw 3" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorMatrix" width="100%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<s:NumericStepper id="r3c1Stepper" minimum="0" maximum="1" value="0.2225" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r3c2Stepper" minimum="0" maximum="1" value="0.7169" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r3c3Stepper" minimum="0" maximum="1" value="0.0606" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r3c4Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r3c5Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Raw 4" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorMatrix" width="100%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<s:NumericStepper id="r4c1Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r4c2Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r4c3Stepper" minimum="0" maximum="1" value="0" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r4c4Stepper" minimum="0" maximum="1" value="1" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
			<s:NumericStepper id="r4c5Stepper" minimum="0" maximum="1" value="1" stepSize="0.0001" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		
		
		
		<s:FormItem label="Red Multiplyer" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="redMultiplyerStepper" minimum="0" maximum="1" value="1" stepSize="0.01" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Green Multiplyer" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="greenMultiplyerStepper" minimum="0" maximum="1" value="1" stepSize="0.01" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Blue Multiplyer" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="blueMultiplyerStepper" minimum="0" maximum="1" value="1" stepSize="0.01" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Alpha Multiplyer" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="alphaMultiplyerStepper" minimum="0" maximum="1" value="1" stepSize="0.01" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Red Offset" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="redOffsetStepper" minimum="-255" maximum="255" value="0" stepSize="1" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Green Offset" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="greenOffsetStepper" minimum="-255" maximum="255" value="0" stepSize="1" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Blue Offset" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="blueOffsetStepper" minimum="-255" maximum="255" value="0" stepSize="1" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Alpha Offset" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="ColorTransform" width="100%">
			<s:NumericStepper id="alphaOffsetStepper" minimum="-1" maximum="1" value="0" stepSize="0.01" valueFormatFunction="myFormatFunc" />
		</s:FormItem>

		
		
		<s:FormItem label="Min Distance" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="Fog" width="100%">
			<s:NumericStepper id="minDistanceStepper" minimum="0" maximum="1000" value="1" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Max Distance" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="Fog" width="100%">
			<s:NumericStepper id="maxDistanceStepper" minimum="0" maximum="1000" value="1" valueFormatFunction="myFormatFunc" />
		</s:FormItem>
		<s:FormItem label="Color" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" includeIn="Fog" width="100%">
			<mx:ColorPicker id="colorPicker"/>
		</s:FormItem>		
		
		
		
		<controls:HorizontalFormSeparator/>
		
	</s:Form>
	<s:Spacer height="4"/>
	<s:HGroup width="100%" horizontalAlign="right">
		<s:Button id="yesButton" label="Add" click="yesButton_clickHandler(event)"/>
		<!--<s:Button id="noButton" label="No, create new library" click="noButton_clickHandler(event)"/>-->
		<s:Button id="cancelButton" label="Cancel" click="cancelButton_clickHandler(event)"/>
	</s:HGroup>
</s:TitleWindow>
