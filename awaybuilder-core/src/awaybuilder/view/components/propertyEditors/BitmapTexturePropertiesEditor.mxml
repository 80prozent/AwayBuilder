<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark" gap="0"
		  horizontalAlign="center" height="100%">
    <fx:Declarations>
    </fx:Declarations>
    <fx:Script><![CDATA[
		import away3d.materials.utils.DefaultMaterialManager;
		
		import awaybuilder.model.vo.scene.BitmapTextureVO;
		
		import mx.collections.ArrayCollection;

		[Bindable]
		private var _isDefault:Boolean = false;
		
		private var _prevSelected:ArrayCollection = new ArrayCollection(); 
		[Bindable]
		public function set prevSelected( value:ArrayCollection ): void
		{
			this._prevSelected = value;
		}
		public function get prevSelected():ArrayCollection
		{
			return this._prevSelected;
		}
		
		private var _data:BitmapTextureVO;
		[Bindable]
		public function get data():BitmapTextureVO
		{
			return _data;
		}
		public function set data( value:BitmapTextureVO ):void
		{
			if( !value ) return;
			_data = value;
			_isDefault =  _data.linkedObject == DefaultMaterialManager.getDefaultTexture();
		}
		
        private function name_changeHandler( event:Event ):void
        {
//            var newValue:BitmapTextureVO = new BitmapTextureVO( data.linkedObject as BitmapTexture );
//            newValue.name = nameInput.text;
//            dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.MATERIAL_NAME_CHANGE, newValue, true));
        }

        private function repeatBox_changeHandler( event:Event ):void
        {
//            var newValue:MaterialVO = new MaterialVO( data.linkedObject as MaterialBase );
//            newValue.repeat = repeatBox.selected;
//            dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.MATERIAL_CHANGE, newValue, true));
        }

		protected function replaceButton_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.REPLACE_TEXTURE, data, true));
		}
		protected function editParentObjectButton_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHOW_PARENT_MESH_PROPERTIES,  prevSelected.removeItemAt(prevSelected.length-1), true));
		}
		
	]]></fx:Script>

	<s:Group width="100%" top="0">
		<s:Rect left="0" right="0" top="3" bottom="3">
			<s:fill>
				<s:SolidColor color="0x111111" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" verticalAlign="middle" paddingLeft="2" paddingRight="2" paddingTop="4" paddingBottom="4">
			<s:Button id="editParentObjectButton" styleName="editParentObjectButtonStyle" visible="{prevSelected.length>0}"
					  width="32" height="32" click="editParentObjectButton_clickHandler(event)"/>
			<s:Label width="100%" text="Texture Properties" fontWeight="bold" fontSize="14"/>
		</s:HGroup>
	</s:Group>
	
    <s:Form width="100%" height="100%" skinClass="awaybuilder.view.skins.PropertyFormSkin">
        <s:FormItem label="Name" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
            <s:TextInput id="nameInput" width="100%" text="{data.name}" change="name_changeHandler(event)" enabled="{!_isDefault}"/>
        </s:FormItem>
		<s:FormItem label="Bitmap" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
			<s:Button label="Replace ..." click="replaceButton_clickHandler(event)" width="100%" enabled="{!_isDefault}"/>
		</s:FormItem>
    </s:Form>
	<s:Spacer height="10"/>
    <s:Group width="90%">
		<s:Rect top="-1" bottom="-1" right="-1" left="-1">
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
		<s:BitmapImage width="100%" source="{data.bitmapData}" scaleMode="letterbox"/>
		<s:filters>
			<s:DropShadowFilter distance="1"/>
		</s:filters>
	</s:Group>

</s:VGroup>
